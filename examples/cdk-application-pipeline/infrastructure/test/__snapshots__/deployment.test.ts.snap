// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Deployment Snapshot 1`] = `
Object {
  "Outputs": Object {
    "ApiUrl": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "FargateServiceLBB353E155",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
    "FargateServiceLoadBalancerDNS9433D5F6": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "FargateServiceLBB353E155",
          "DNSName",
        ],
      },
    },
    "FargateServiceServiceURL47701F45": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "FargateServiceLBB353E155",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AccessLogBucketDA470295": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Dont need access logs for a bucket that is for access logs",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AccessLogBucketPolicyF52D2D01": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AccessLogBucketDA470295",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AccessLogBucketDA470295",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AccessLogBucketDA470295",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::127311923021:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AccessLogBucketDA470295",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/dummy/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AccessLogBucketDA470295",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/dummy/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AccessLogBucketDA470295",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AppLogGroup7D8CD952": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": "/aws/ecs/service/teststack",
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AuroraCluster23D869C0": Object {
      "DeletionPolicy": "Snapshot",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-RDS6",
              "reason": "IAM authentication not supported on Serverless v1",
            },
            Object {
              "id": "AwsSolutions-RDS11",
              "reason": "Custom port not supported on Serverless v1",
            },
            Object {
              "id": "AwsSolutions-RDS14",
              "reason": "Backtrack not supported on Serverless v1",
            },
            Object {
              "id": "AwsSolutions-RDS16",
              "reason": "CloudWatch Log Export not supported on Serverless v1",
            },
          ],
        },
      },
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "teststack",
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraClusterSubnetsF3E9E6AD",
        },
        "DatabaseName": "fruits",
        "DeletionProtection": true,
        "Engine": "aurora-mysql",
        "EngineMode": "serverless",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraSecret41E6E877",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraSecret41E6E877",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraClusterSecurityGroupD85BF9CB",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraClusterSecurityGroupD85BF9CB": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraClusterSecurityGroupfromTestStackFargateServiceSecurityGroupC3D83923IndirectPortE78BF232": Object {
      "Properties": Object {
        "Description": "from TestStackFargateServiceSecurityGroupC3D83923:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "AuroraCluster23D869C0",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AuroraClusterSecurityGroupD85BF9CB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "FargateServiceSecurityGroup262B61DD",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "AuroraCluster23D869C0",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraClusterSubnetsF3E9E6AD": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
          Object {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraSecret41E6E877": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-SMG4",
              "reason": "Dont require secret rotation",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"fruitapi\\"}",
        },
        "Name": "teststack-DB",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraSecretAttachment65089D67": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AuroraSecret41E6E877",
        },
        "TargetId": Object {
          "Ref": "AuroraCluster23D869C0",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "teststack",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ElbResponseTimeAlarm78B10A7D": Object {
      "Properties": Object {
        "AlarmName": "teststack-ElbResponseTime",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateServiceLBB353E155",
                "LoadBalancerFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "TargetResponseTime",
        "Namespace": "AWS/ApplicationELB",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateServiceECC8084D": Object {
      "DependsOn": Array [
        "FargateServiceLBPublicListenerECSGroupBE57E081",
        "FargateServiceLBPublicListener4B4929CA",
      ],
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 3,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": Array [
          Object {
            "ContainerName": "web",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "FargateServiceSecurityGroup262B61DD",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              Object {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              Object {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceName": "teststack",
        "TaskDefinition": Object {
          "Ref": "FargateServiceTaskDef940E3A80",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FargateServiceLBB353E155": Object {
      "DependsOn": Array [
        "AccessLogBucketPolicyF52D2D01",
        "AccessLogBucketDA470295",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet3DefaultRoute4697774F",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "AccessLogBucketDA470295",
            },
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "FargateServiceLBSecurityGroup5F444C78",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          Object {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          Object {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "FargateServiceLBPublicListener4B4929CA": Object {
      "DependsOn": Array [
        "AccessLogBucketPolicyF52D2D01",
        "AccessLogBucketDA470295",
      ],
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "FargateServiceLBB353E155",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "FargateServiceLBPublicListenerECSGroupBE57E081": Object {
      "DependsOn": Array [
        "AccessLogBucketPolicyF52D2D01",
        "AccessLogBucketDA470295",
      ],
      "Properties": Object {
        "HealthCheckIntervalSeconds": 60,
        "HealthCheckPath": "/actuator/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "5",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "FargateServiceLBSecurityGroup5F444C78": Object {
      "DependsOn": Array [
        "AccessLogBucketPolicyF52D2D01",
        "AccessLogBucketDA470295",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-EC23",
              "reason": "Public ELB",
            },
          ],
        },
      },
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB TestStackFargateServiceLB3A9C232E",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateServiceLBSecurityGrouptoTestStackFargateServiceSecurityGroupC3D839238080D472D38B": Object {
      "DependsOn": Array [
        "AccessLogBucketPolicyF52D2D01",
        "AccessLogBucketDA470295",
      ],
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "FargateServiceSecurityGroup262B61DD",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FargateServiceLBSecurityGroup5F444C78",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "FargateServiceSecurityGroup262B61DD": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/FargateService/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateServiceSecurityGroupfromTestStackFargateServiceLBSecurityGroup775BF6268080E75523AD": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FargateServiceSecurityGroup262B61DD",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "FargateServiceLBSecurityGroup5F444C78",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FargateServiceTaskDef940E3A80": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-ECS2",
              "reason": "Allow environment variables",
            },
          ],
        },
      },
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Environment": Array [
              Object {
                "Name": "SPRING_DATASOURCE_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "jdbc:mysql://",
                      Object {
                        "Fn::GetAtt": Array [
                          "AuroraCluster23D869C0",
                          "Endpoint.Address",
                        ],
                      },
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "AuroraCluster23D869C0",
                          "Endpoint.Port",
                        ],
                      },
                      "/fruits",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Sub": "dummy.dkr.ecr.us-east-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-dummy-us-east-1:99de3b2e8d07502e2e3958ff3b69f02d494482f390441d48a69003a9261bf03c",
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AppLogGroup7D8CD952",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "service",
              },
            },
            "Memory": 1024,
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "SPRING_DATASOURCE_USERNAME",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AuroraSecret41E6E877",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SPRING_DATASOURCE_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "AuroraSecret41E6E877",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateServiceTaskDefExecutionRole9194820E",
            "Arn",
          ],
        },
        "Family": "teststack",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FargateServiceTaskDefTaskRole8CDCF85E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FargateServiceTaskDefExecutionRole9194820E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Allow ecr:GetAuthorizationToken",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:us-east-1:dummy:repository/cdk-hnb659fds-container-assets-dummy-us-east-1",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AppLogGroup7D8CD952",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "AuroraSecret41E6E877",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2",
        "Roles": Array [
          Object {
            "Ref": "FargateServiceTaskDefExecutionRole9194820E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateServiceTaskDefTaskRole8CDCF85E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "HealthAlarm371A639B": Object {
      "Properties": Object {
        "AlarmName": "teststack-Health",
        "AlarmRule": Object {
          "Fn::Join": Array [
            "",
            Array [
              "(ALARM(\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ElbResponseTimeAlarm78B10A7D",
                  "Arn",
                ],
              },
              "\\") OR ALARM(\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SyntheticTestCanarySuccessAlarm5E743E72",
                  "Arn",
                ],
              },
              "\\") OR ALARM(\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SyntheticTestCanaryDurationAlarm0034B8A1",
                  "Arn",
                ],
              },
              "\\"))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "SyntheticTest7431F0B5": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "SyntheticTestArtifactsBucketE42C1786",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": "cdk-hnb659fds-assets-dummy-us-east-1",
          "S3Key": "fee4831da47b606b7939f26c3d2c08d3be03f758f9b0b2bf7a0f1d4439aff699.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "SyntheticTestServiceRole12E22F25",
            "Arn",
          ],
        },
        "Name": "teststack",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "url": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "http://",
                  Object {
                    "Fn::GetAtt": Array [
                      "FargateServiceLBB353E155",
                      "DNSName",
                    ],
                  },
                ],
              ],
            },
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.5",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)",
        },
        "StartCanaryAfterCreation": true,
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SyntheticTestArtifactsBucketE42C1786": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Dont need access logs for canary bucket",
            },
            Object {
              "id": "AwsSolutions-S2",
              "reason": "Dont require public access block for canary bucket",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Allow resource:*",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "SyntheticTestArtifactsBucketPolicyF91074A7": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "SyntheticTestArtifactsBucketE42C1786",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SyntheticTestArtifactsBucketE42C1786",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SyntheticTestArtifactsBucketE42C1786",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SyntheticTestCanaryDurationAlarm0034B8A1": Object {
      "Properties": Object {
        "AlarmName": "teststack-CanaryDuration",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticTest7431F0B5",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Duration",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SyntheticTestCanarySuccessAlarm5E743E72": Object {
      "Properties": Object {
        "AlarmName": "teststack-CanarySuccessRate",
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "SyntheticTest7431F0B5",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 100,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SyntheticTestServiceRole12E22F25": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Allow resource:*",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "SyntheticTestArtifactsBucketE42C1786",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "SyntheticTestArtifactsBucketE42C1786",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:us-east-1:dummy:log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcFlowLogF72230C7": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "VpcFlowLogIAMRoleB4DCB624",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "VpcFlowLogLogGroupBB186289",
        },
        "ResourceId": Object {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcFlowLogIAMRoleB4DCB624": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcFlowLogIAMRoleDefaultPolicy7533133B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "VpcFlowLogLogGroupBB186289",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "VpcFlowLogIAMRoleB4DCB624",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpcFlowLogIAMRoleDefaultPolicy7533133B",
        "Roles": Array [
          Object {
            "Ref": "VpcFlowLogIAMRoleB4DCB624",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpcFlowLogLogGroupBB186289": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
